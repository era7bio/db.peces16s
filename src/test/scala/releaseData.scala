package ohnosequences.db.rna16s.test

import ohnosequences.awstools.s3._
import com.amazonaws.auth._
import com.amazonaws.services.s3.transfer._

/* Copy data in S3 generated by dropInconsistentAssignments filter to a location defined in main/scala/release.scala */
case object releaseData {

  def apply(credentials: AWSCredentialsProvider) = {
    import ohnosequences.db.rna16s.data

    val transferManager = new TransferManager(credentials)
    println(s"Copying generated data...")

    copyData(transferManager)(
      dropInconsistentAssignments.output.fasta.s3 -> data.fastaS3,
      dropInconsistentAssignments.output.table.s3 -> data.id2taxasS3,
      dropInconsistentAssignmentsAndGenerate.s3   -> data.blastDBS3
    )

    transferManager.shutdownNow()
    println(s"Done.")
  }


  def copyData(transferManager: TransferManager)(pairs: (AnyS3Address, AnyS3Address)*) = {
    pairs.foreach { case (source, target) =>

      transferManager.copy(
        source.bucket, source.key,
        target.bucket, target.key
      ).waitForCompletion

      println(s"Copied ${source} to ${target}")
    }
  }

}
